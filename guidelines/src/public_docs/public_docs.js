/*
===============================================
definiÁ„o de documentos
===============================================
*/
const documentos = [
  {
    "id": 1, 
    "tag": ["Developer Guideline"],
    "title": "Arquitetura em 3 Camadas",
    "prelude": "Ao incorporar esses princ√≠pios de arquitetura em 3 camadas, voc√™ estar√° promovendo uma estrutura mais coesa, escal√°vel e de f√°cil manuten√ß√£o para seu projeto. Esses princ√≠pios s√£o fundamentais para o desenvolvimento de sistemas robustos e flex√≠veis.",
    "url_header": "https://images.pexels.com/photos/9436715/pexels-photo-9436715.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
    "section": [
      {
        "sub-title": "Front-End",
        "paragraph": [
          "Segrega√ß√£o de conceitos: Mantenha a l√≥gica de apresenta√ß√£o separada da l√≥gica de neg√≥cios."
        ]
      },
      {
        "sub-title": "Camada de Neg√≥cio",
        "paragraph": [
          "Servi√ßos e Entidades: Organize a l√≥gica de neg√≥cios em servi√ßos que manipulam entidades. Evite l√≥gica desnecess√°ria na camada de persist√™ncia.",
          "Valida√ß√£o de Dados: Realize valida√ß√µes de dados na camada de neg√≥cios para garantir integridade.",
          "Utilize exce√ß√µes para lidar com condi√ß√µes excepcionais."
        ]
      },
      {
        "sub-title": "Camada de Persist√™ncia",
        "paragraph": [
          "ORM (Mapeamento Objeto-Relacional): Utilize ORM para mapear objetos para o modelo de banco de dados. Evite consultas complexas diretamente na camada de neg√≥cios."
        ]
      }
    ]
  },
  {
    "id": 2, 
    "tag": ["Developer Guideline"],
    "title": "Boas Pr√°ticas para Desenvolvimento",
    "prelude": "Ao incorporar esses princ√≠pios de Orienta√ß√£o a Objetos, voc√™ estar√° promovendo uma estrutura mais coesa, escal√°vel e de f√°cil manuten√ß√£o para seu projeto. Esses princ√≠pios s√£o fundamentais para o desenvolvimento de sistemas robustos e flex√≠veis.",
    "url_header": "",
    "section": [
      {
        "sub-title": "Nomes Significativos",
        "paragraph": [
          "Escolha nomes descritivos para vari√°veis, fun√ß√µes e classes.",
          "Evite nomes gen√©ricos, seja espec√≠fico sobre a fun√ß√£o."
        ]
      },
      {
        "sub-title": "Fun√ß√µes Pequenas e Concisas",
        "paragraph": [
          "Mantenha fun√ß√µes pequenas e focadas em uma √∫nica responsabilidade. Evite fun√ß√µes com muitos par√¢metros."
        ]
      },
      {
        "sub-title": "Organiza√ß√£o L√≥gica",
        "paragraph": [
          "Agrupe fun√ß√µes relacionadas. Mantenha uma estrutura hier√°rquica f√°cil de entender."
        ]
      },
      {
        "sub-title": "Evite C√≥digos Duplicados",
        "paragraph": [
          "Refatore trechos duplicados para fun√ß√µes ou classes reutiliz√°veis. Utilize heran√ßa ou composi√ß√£o para promover a reutiliza√ß√£o."
        ]
      },
      {
        "sub-title": "Linguagem Ub√≠qua",
        "paragraph": [
          "Use uma linguagem comum entre desenvolvedores e especialistas do dom√≠nio. Evite ambiguidades na comunica√ß√£o sobre o dom√≠nio."
        ]
      },
      {
        "sub-title": "Contexto Limitado",
        "paragraph": [
          "Defina limites claros entre contextos delimitados para evitar conflitos. Utilize contextos delimitados para garantir consist√™ncia e isolamento."
        ]
      },
      {
        "sub-title": "Modelo Rico",
        "paragraph": [
          "Desenvolva modelos ricos em comportamento, n√£o apenas em dados. Utilize agregados para garantir consist√™ncia e transa√ß√µes."
        ]
      },
      {
        "sub-title": "Event-Driven Architecture",
        "paragraph": [
          "Implemente arquiteturas orientadas a eventos para reagir a mudan√ßas no estado. Utilize eventos e valida√ß√µes para desinstanciar componentes."
        ]
      },
      {
        "sub-title": "Refatora√ß√£o Cont√≠nua",
        "paragraph": [
          "Esteja disposto a refatorar c√≥digo para melhorar a qualidade e a manutenibilidade. Utilize padr√µes de design quando apropriado."
        ]
      },
      {
        "sub-title": "Comunica√ß√£o Eficiente",
        "paragraph": [
          "Promova a comunica√ß√£o eficiente entre as camadas, evitando acoplamento excessivo."
        ]
      }
    ]
  },
  {
      "id": 3, 
    "tag": ["Developer Guideline"]
    , "title": "Princ√≠pios de Orienta√ß√£o a Objetos"
    , "prelude": "Siga os princ√≠pios SOLID (Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation, Dependency Inversion) para criar c√≥digo modular e flex√≠vel."
    , "url_header": ""
    , "section": [
        {
            "sub-title": "Encapsulamento"
            , "paragraph": [
                "Limita√ß√£o de Acesso: Encapsule os detalhes internos das classes, expondo apenas o necess√°rio. Utilize modificadores de acesso para controlar a visibilidade."
                , "Coer√™ncia Interna: Mantenha a consist√™ncia interna da classe, encapsulando comportamento e dados."
            ]
        }
        , {
            "sub-title": "Heran√ßa"
            , "paragraph": [
                "Fa√ßa sempre uso de uma Heran√ßa Significativa, utilize heran√ßa apenas quando houver uma rela√ß√£o clara. Evite heran√ßa apenas por conveni√™ncia."
            ]
        }
        , {
            "sub-title": "Polimorfismo"
            , "paragraph": [
                "Explore o polimorfismo para tratar objetos de maneira gen√©rica. Use interfaces e classes abstratas para definir contratos."
            ]
        }
        , {
            "sub-title": "Composi√ß√£o"
            , "paragraph": [
                "Favore√ßa Composi√ß√£o sobre Heran√ßa, prefira composi√ß√£o para criar rela√ß√µes entre objetos. Isso promove maior flexibilidade e reutiliza√ß√£o de c√≥digo."
            ]
        }
        , {
            "sub-title": "Inje√ß√£o de Depend√™ncia"
            , "paragraph": [
                "Utilize inje√ß√£o de depend√™ncia para reduzir acoplamento. Facilite a substitui√ß√£o de implementa√ß√µes em tempo de execu√ß√£o."
            ]
        }
    ]
  },
  {
      "id": 4, 
    "tag": ["Reviewer Guideline"],
    "title": "Reviewr Guideline",
    "prelude": "Familiarize-se com o contexto da altera√ß√£o. Leia as especifica√ß√µes e compreenda o prop√≥sito da mudan√ßa.",
    "url_header": "",
    "section": [
      {
        "sub-title": "Clareza e Legibilidade",
        "paragraph": [
          "Verifique se o c√≥digo √© claro, leg√≠vel e segue as boas pr√°ticas de codifica√ß√£o. Analise se os nomes de vari√°veis, fun√ß√µes e classes s√£o significativos."
        ]
      },
      {
        "sub-title": "Conformidade com Padr√µes",
        "paragraph": [
          "Certifique-se de que o c√≥digo est√° em conformidade com os padr√µes de codifica√ß√£o estabelecidos."
        ]
      },
      {
        "sub-title": "Divis√£o L√≥gica",
        "paragraph": [
          "Avalie a divis√£o l√≥gica do c√≥digo em fun√ß√µes e classes. Garanta que cada componente tenha uma responsabilidade clara."
        ]
      },
      {
        "sub-title": "L√≥gica de Neg√≥cios",
        "paragraph": [
          "Avalie se a l√≥gica de neg√≥cios est√° correta e atende aos requisitos."
        ]
      },
      {
        "sub-title": "Tratamento de Erros",
        "paragraph": [
          "Verifique se o c√≥digo lida adequadamente com poss√≠veis cen√°rios de erro."
        ]
      },
      {
        "sub-title": "Efici√™ncia e Desempenho",
        "paragraph": [
          "Avalie se o c√≥digo √© eficiente e considera quest√µes de desempenho quando aplic√°vel."
        ]
      },
      {
        "sub-title": "Encapsulamento e Coes√£o",
        "paragraph": [
          "Analise o uso adequado de encapsulamento e a coes√£o das classes e fun√ß√µes."
        ]
      },
      {
        "sub-title": "Heran√ßa e Composi√ß√£o",
        "paragraph": [
          "Verifique se a heran√ßa √© utilizada adequadamente e se a composi√ß√£o √© preferida quando apropriado."
        ]
      },
      {
        "sub-title": "Divis√£o em Camadas",
        "paragraph": [
          "Garanta que o c√≥digo esteja organizado em camadas (front-end, camada de neg√≥cios, camada de persist√™ncia) de acordo com as melhores pr√°ticas."
        ]
      },
      {
        "sub-title": "Clareza e Conven√ß√µes",
        "paragraph": [
          "Verifique se as mensagens de commit s√£o claras, concisas e seguem conven√ß√µes estabelecidas."
        ]
      },
      {
        "sub-title": "Refer√™ncia a Problemas",
        "paragraph": [
          "Certifique-se de que as mensagens de commit referenciam problemas ou tarefas relacionadas."
        ]
      },
      {
        "sub-title": "Feedback Construtivo",
        "paragraph": ["Forne√ßa feedback construtivo e sugest√µes para melhorias."]
      },
      {
        "sub-title": "Perguntas para o Autor",
        "paragraph": [
          "Fa√ßa perguntas para esclarecer inten√ß√µes ou decis√µes de design."
        ]
      },
      {
        "sub-title": "Elogios e Reconhecimento",
        "paragraph": ["Reconhe√ßa o bom trabalho quando apropriado."]
      }
    ]
  }   
];
/*
===============================================
definiÁ„o de documentos
===============================================
*/

module.exports = documentos;
